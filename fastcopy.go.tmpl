//go:build go1.17

// CODE GENERATED AUTOMATICALLY WITH github.com/probably-not/fastcopy/cmd/gen.go

package fastcopy

func Copy{{ .T | Title }}Slice(dst, src []{{ .T }}) {
	if len(dst) < len(src) {
		panic("Copy{{ .T | Title }}Slice attempted with invalid len for dst. len(dst) must be at least equal to len(src)")
	}

	// If len(src) is greater than the maximum that we have generated for, then we utilize the built-in copy function.
	if len(src) > {{ .MaxN }} {
		copy(dst, src)
	}

	// If len(src) is within our generation, we utilize the "optimized" copy function.
	copy{{ .T | Title }}SliceIdx[len(src)](dst, src)
}

var copy{{ .T | Title }}SliceIdx = [{{ .MaxL }}]func([]{{ .T }}, []{{ .T }}){
	{{ range $val := Iterate .MaxL }}
	{{ $val }}: copy{{ $.T | Title }}Slice{{ $val }},
	{{ end }}
}
{{ with .CopyFuncGenerators }}{{ range . }}
func copy{{ .T | Title }}Slice{{ .N }}(dst, src []{{ .T }}) {
	*(*[{{ .N }}]{{ .T }})(dst) = *(*[{{ .N }}]{{ .T }})(src)
}
{{ end }}{{ end }}